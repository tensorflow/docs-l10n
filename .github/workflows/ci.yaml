name: CI
on: pull_request

jobs:
  format_notebooks:
    name: Format notebooks
    runs-on: ubuntu-latest
    env:
      REMOTE_USER: ${{ github.event.pull_request.head.user.login }}
      REMOTE_REPO: ${{ github.event.pull_request.head.repo.name }}
      REMOTE_BRANCH: ${{ github.event.pull_request.head.ref }}
      LOCAL_BRANCH: ${{ github.event.pull_request.head.ref }}

    steps:
    - uses: actions/setup-python@v1

    - name: Checkout user/docs-l10n
      uses: actions/checkout@v2
      with:
        path: docs-l10n

    - name: Checkout tensorflow/docs
      uses: actions/checkout@v2
      with:
        repository: tensorflow/docs
        path: docs

    - name: Set up environment
      run: |
        pip install --upgrade absl-py
        cd ./docs-l10n
        git fetch -u origin master:master
        # Pull user's PR branch and store ref in FETCH_HEAD
        #git fetch "git@github.com:${REMOTE_USER}/${REMOTE_REPO}.git" "$REMOTE_BRANCH"
        git fetch "https://github.com/${REMOTE_USER}/${REMOTE_REPO}.git" "$REMOTE_BRANCH"
        git checkout -b "$LOCAL_BRANCH" FETCH_HEAD
        #
        git config --global user.email "tfdocsbot+no-reply@gmail.com"
        git config --global user.name "TF DocsBot"

    - name: nbfmt
      run: |
        cd ./docs-l10n
        NOTEBOOKS_CHANGED="$(git diff --name-only master | grep '\.ipynb$' || true)"
        # need to restrict this to user changed notebooks
        if [[ -n "$NOTEBOOKS_CHANGED" ]]; then
          echo "Run nbfmt.py on updated notebooks:"
          python ../docs/tools/nbfmt.py --ignore_warn $NOTEBOOKS_CHANGED
        else
          echo "No notebooks found."
        fi

    - name: Push changes
      run: |
        cd ./docs-l10n
        MODIFIED_FILES=$(git ls-files --modified)
        if [[ -n "$MODIFIED_FILES" ]]; then
          echo "Commit formatting changes for:"
          echo "$MODIFIED_FILES"
          echo ""
          git add $MODIFIED_FILES
          if git commit -m "CI: nbfmt"; then
            #git push
            git push "https://github.com/${REMOTE_USER}/${REMOTE_REPO}.git" "${LOCAL_BRANCH}:${REMOTE_BRANCH}"
          fi
        else
          echo "No modified files to push."
        fi
